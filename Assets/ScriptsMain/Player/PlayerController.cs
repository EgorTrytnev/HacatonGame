using System.Collections.Generic;
using UnityEngine;
using Photon.Pun;

/// <summary>
/// –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π PlayerController —Å –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –≥–æ–ª–æ—Å–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π
/// –£–ø—Ä–∞–≤–ª—è–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º –∏ –µ–≥–æ —é–Ω–∏—Ç–∞–º–∏ —á–µ—Ä–µ–∑ –≥–æ–ª–æ—Å –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
/// </summary>
[RequireComponent(typeof(Rigidbody2D))]
[RequireComponent(typeof(PhotonView))]
[RequireComponent(typeof(VoiceSystemManager))]
public class PlayerController : MonoBehaviourPun
{
    [SerializeField] private float speed = 5f;
    [SerializeField] private CollorTeam collorTeam;

    private float _hor;
    private float _ver;
    private SpriteRenderer _spriteRenderer;
    private Rigidbody2D _rb;
    private Animator animator;
    private SpawnDetector spawnDetector;
    private VoiceSystemManager voiceManager;

    void Start()
    {
        _spriteRenderer = GetComponent<SpriteRenderer>();
        _rb = GetComponent<Rigidbody2D>();
        animator = GetComponent<Animator>();
        spawnDetector = GetComponent<SpawnDetector>();
        voiceManager = GetComponent<VoiceSystemManager>();

        // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è —Å–ø–∞–≤–Ω–∞ —é–Ω–∏—Ç–æ–≤ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
        if (photonView.IsMine && PhotonNetwork.IsConnected)
        {
            spawnDetector.OnUnitSpawned += OnUnitSpawned;
            spawnDetector.OnUnitDestroyed += OnUnitDestroyed;
        }
    }

    void Update()
    {
        if (!photonView.IsMine && PhotonNetwork.IsConnected) return;

        PlayerMove();
        PlayerActions();
    }

    void PlayerMove()
    {
        _hor = Input.GetAxisRaw("Horizontal");
        _ver = Input.GetAxisRaw("Vertical");
        bool moving = _ver != 0 || _hor != 0;

        if (moving)
        {
            if (_hor == -1) _spriteRenderer.flipX = true;
            else if (_hor == 1) _spriteRenderer.flipX = false;
        }

        animator.SetBool("isRun", moving);
        Vector2 newDir = new Vector2(_hor, _ver).normalized;
        _rb.linearVelocity = newDir * speed;
    }

    void PlayerActions()
    {
        if (!photonView.IsMine) return;

        var sdPv = spawnDetector?.GetComponent<PhotonView>();
        if (sdPv == null) return;

        // –°–ø–∞–≤–Ω —é–Ω–∏—Ç–∞ (–∫–ª–∞–≤–∏—à–∞ E)
        if (Input.GetKeyDown(KeyCode.E) && spawnDetector.getSpawnAllowed())
        {
            int teamId = (int)collorTeam;
            sdPv.RPC("RPC_SpawnMob", RpcTarget.MasterClient, teamId, "Zomby", transform.position);
        }

        // –ö–æ–º–∞–Ω–¥—ã —á–µ—Ä–µ–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ –≥–æ–ª–æ—Å—É)
        if (Input.GetKeyDown(KeyCode.F))
        {
            spawnDetector.CmdFollowMe("Zomby", photonView.ViewID);
            Debug.Log("üéÆ –ö–æ–º–∞–Ω–¥–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π: –°–ª–µ–¥–æ–≤–∞—Ç—å");
        }

        if (Input.GetKeyDown(KeyCode.G))
        {
            spawnDetector.CmdStopFollow("Zomby");
            Debug.Log("üéÆ –ö–æ–º–∞–Ω–¥–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π: –°—Ç–æ–ø");
        }

        if (Input.GetKeyDown(KeyCode.Z))
        {
            spawnDetector.CmdAttackEnemy("Zomby");
            Debug.Log("üéÆ –ö–æ–º–∞–Ω–¥–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π: –ê—Ç–∞–∫–∞");
        }

        // –ì–æ–ª–æ—Å–æ–≤–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è (–∫–ª–∞–≤–∏—à–∞ V)
        if (Input.GetKeyDown(KeyCode.V))
        {
            ActivateVoiceListening();
        }
    }

    /// <summary>
    /// –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥
    /// </summary>
    void ActivateVoiceListening()
    {
        if (voiceManager != null)
        {
            Debug.Log("üéôÔ∏è –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –≥–æ–ª–æ—Å–æ–≤–æ–π —Ä–µ–∂–∏–º");
            // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤–∏–∑—É–∞–ª—å–Ω—É—é –∏–Ω–¥–∏–∫–∞—Ü–∏—é –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
        }
    }

    /// <summary>
    /// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è —Å–ø–∞–≤–Ω–∞ –Ω–æ–≤–æ–≥–æ —é–Ω–∏—Ç–∞
    /// </summary>
    void OnUnitSpawned(GameObject unit)
    {
        if (!photonView.IsMine) return;

        var unitFSM = unit.GetComponent<UnitFSM>();
        var unitPhotonView = unit.GetComponent<PhotonView>();
        
        if (unitFSM != null && unitPhotonView != null && voiceManager != null)
        {
            // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —é–Ω–∏—Ç –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ
            voiceManager.RegisterUnit(unitFSM.unitId, unitPhotonView.ViewID);
            Debug.Log($"üé§ –Æ–Ω–∏—Ç {unitFSM.unitId} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ");
        }
    }

    /// <summary>
    /// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è —é–Ω–∏—Ç–∞
    /// </summary>
    void OnUnitDestroyed(GameObject unit)
    {
        if (!photonView.IsMine) return;

        var unitFSM = unit.GetComponent<UnitFSM>();
        
        if (unitFSM != null && voiceManager != null)
        {
            // –£–¥–∞–ª—è–µ–º —é–Ω–∏—Ç –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
            voiceManager.UnregisterUnit(unitFSM.unitId);
            Debug.Log($"üé§ –Æ–Ω–∏—Ç {unitFSM.unitId} —É–¥–∞–ª–µ–Ω –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã");
        }
    }

    void OnDestroy()
    {
        if (spawnDetector != null)
        {
            spawnDetector.OnUnitSpawned -= OnUnitSpawned;
            spawnDetector.OnUnitDestroyed -= OnUnitDestroyed;
        }
    }
}